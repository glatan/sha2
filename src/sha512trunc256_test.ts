import { assertEquals } from "https://deno.land/std/testing/asserts.ts";
import { Sha512Trunc256 } from "./sha512trunc256.ts";

// https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHA512_224.pdf
// deno-fmt-ignore
const TEST_CASES: Array<[string, Uint8Array]> = [
  // abc
  [
    "53048e2681941ef99b2e29b76b4c7dabe4c2d0c634fc6d46e0e2f13107e7af23",
    Uint8Array.from([0x61, 0x62, 0x63]),
  ],
  // abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu
  [
    "3928e184fb8690f840da3988121d31be65cb9d3ef83ee6146feac861e19b563a",
    Uint8Array.from([
      0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
      0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
      0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
      0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B,
      0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C,
      0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D,
      0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E,
      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
      0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70,
      0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71,
      0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
      0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73,
      0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
      0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75
    ]),
  ],
];

Deno.test("SHA-512Trunc256", () => {
  for (let i = 0; i < TEST_CASES.length; i++) {
    assertEquals(
      new Sha512Trunc256(TEST_CASES[i][1]).hashToLowerHex(),
      TEST_CASES[i][0],
    );
  }
});
